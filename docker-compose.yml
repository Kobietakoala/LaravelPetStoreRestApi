services:

    nginx:
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        depends_on:
            - php
            - mysql
        container_name: laravel_nginx
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./src:/var/www/html

    php:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: laravel_php
        volumes:
            - ./src:/var/www/html

    mysql:
        image: mysql:8.0.27
        platform: linux/amd64
        container_name: laravel_mysql
        ports:
            - 3306:3306
        volumes:
            - ./mysql:/var/lib/mysql
        environment:
            MYSQL_DATABASE: $(MYSQL_DATABASE)
            MYSQL_USER: $(MYSQL_USER)
            MYSQL_PASSWORD: $(MYSQL_PASSWORD)
            MYSQL_ROOT_PASSWORD: $(MYSQL_ROOT_PASSWORD)

    composer:
        image: composer:latest
        container_name: laravel_composer
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ['composer', 'install']

    artisan:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: laravel_artisan
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ['php', 'artisan']
        depends_on:
            composer:
                condition: service_completed_successfully
            npm:
                condition: service_completed_successfully

    npm:
        image: node:current-alpine
        container_name: laravel_npm
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ['npm', 'install', 'npm', 'build', 'npm', 'run dev']







